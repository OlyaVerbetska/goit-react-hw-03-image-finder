{"version":3,"sources":["components/Searchbar/Searchbar.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","services/images-api.js","App.js","index.js"],"names":["Searchbar","state","query","inputChange","e","setState","currentTarget","value","formsubmit","preventDefault","props","onSubmit","resetForm","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","onClick","children","ImageGalleryItem","modalImage","showModal","isLoad","toggleModal","bigImage","galleryImage","altImage","src","alt","image","color","height","width","timeout","ImageGallery","images","map","largeImageURL","webformatURL","tags","id","Button","axios","defaults","baseURL","searchQuery","currentPage","perPage","get","then","response","data","hits","App","isLoading","error","handleSearchQuery","getImages","options","imagesAPI","prevState","catch","finally","listRef","React","createRef","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.750dd7ef.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport '../Searchbar/Searchbar.scss';\r\nclass Searchbar extends Component {\r\n  state = {\r\n    query: '',\r\n  };\r\n  inputChange = e => {\r\n    // console.dir(e.currentTarget.value);\r\n\r\n    this.setState({\r\n      query: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  formsubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.query);\r\n    this.resetForm();\r\n  };\r\n  resetForm = () => {\r\n    this.setState({\r\n      query: '',\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.formsubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.inputChange}\r\n            value={this.state.query}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nimport '../Modal/Modal.scss'\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n  handleBackdropClick = e => {\r\n  \r\n    if (e.target === e.currentTarget) {\r\n this.props.onClose();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return createPortal(\r\n        <div className=\"Overlay\" onClick = {this.handleBackdropClick}>\r\n        <div className=\"Modal\">\r\n         \r\n          {this.props.children}\r\n        </div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","\r\nimport {Component} from 'react';\r\nimport Modal from '../Modal/Modal';\r\nimport Loader from 'react-loader-spinner';\r\nimport '../.././styles.scss';\r\n\r\n\r\nimport '../ImageGalleryItem/ImageGalleryItem.scss'\r\n\r\nclass ImageGalleryItem extends Component {\r\n  state = {\r\n    modalImage: '',\r\n    showModal:false,\r\n    isLoad: false,\r\n  }\r\ncomponentDidMount() {\r\n  this.setState({\r\n    modalImage: this.props.bigImage\r\n  })\r\n}\r\ntoggleModal = () => {\r\n const {isLoad} = this.state;\r\n  this.setState(({ showModal }) => ({\r\n    showModal: !showModal,\r\n  }));\r\n  this.setState({ isLoad: !isLoad });\r\n};\r\n\r\n  render () {\r\n    const {galleryImage,altImage } = this.props;\r\n    const {showModal, modalImage, isLoad} = this.state;\r\n    return (\r\n    <>\r\n      <li className=\"ImageGalleryItem\">\r\n    <img\r\n      src={galleryImage}\r\n      alt={altImage}\r\n      className=\"ImageGalleryItem-image\"\r\n      onClick ={this.toggleModal} \r\n         />\r\n  </li>\r\n      {showModal && (\r\n          <Modal onClose={this.toggleModal} image = {modalImage}>\r\n             <img src={modalImage} alt=\"\"/>\r\n            {isLoad && (\r\n        <div className = \"Loader\">  <Loader\r\n            type=\"Hearts\"\r\n            color=\"#fff\"\r\n            height={60}\r\n            width={500}\r\n            timeout={1000} //3 secs\r\n               \r\n          />\r\n          </div>\r\n        )}\r\n            \r\n          </Modal>\r\n        )}\r\n\r\n\r\n        </>\r\n  )\r\n  }\r\n}\r\nexport default ImageGalleryItem;\r\n      ","import PropTypes from 'prop-types';\r\n\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\n\r\nimport '../ImageGallery/ImageGallery.scss'\r\n\r\nconst ImageGallery = ({ images }) => (\r\n  <ul className=\"ImageGallery\">\r\n    {images.map(image => (\r\n      <ImageGalleryItem\r\n        bigImage={image.largeImageURL}\r\n        galleryImage={image.webformatURL}\r\n        altImage = {image.tags}\r\n        key={image.id}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      largeImageURL: PropTypes.string.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      tags: PropTypes.string.isRequired,\r\n      id:PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","\r\nimport '../Button/Button.scss'\r\n\r\nconst Button = ({onClick, children}) => (\r\n    <button type=\"button\" className=\"Button\" onClick = {onClick}>\r\n {children}\r\n  </button>\r\n)\r\n\r\nexport default Button;","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com/api';\r\nconst key = '20318294-75f546a505c22d4a6a744da7a'\r\n\r\nconst fetchImages = ({searchQuery, currentPage = 1 , perPage = 12})=> {return axios\r\n    .get(\r\n      `/?key=${key}&q=${searchQuery}&image_type=photo&per_page=${perPage}&page=${currentPage}`,\r\n    ).then(response => response.data.hits)\r\n  \r\n}\r\n//eslint-disable-next-line\r\nexport default {fetchImages};","import { Component } from 'react';\nimport React from 'react';\n\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\n\nimport imagesAPI from './services/images-api.js';\n\nimport './styles.scss';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.listRef = React.createRef();\n  }\n\n  state = {\n    images: [],\n    currentPage: 1,\n    searchQuery: '',\n    isLoading: false,\n    error: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.getImages();\n    }\n\n    if (this.state.currentPage > 2) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  handleSearchQuery = query => {\n    this.setState({\n      searchQuery: query,\n      images: [],\n      currentPage: 1,\n      isLoading: false,\n      error: null,\n    });\n  };\n\n  getImages = () => {\n    const { currentPage, searchQuery } = this.state;\n    //=====newsApi\n    const options = {\n      searchQuery,\n      currentPage,\n    };\n\n    this.setState({ isLoading: true });\n\n    imagesAPI\n      .fetchImages(options)\n      .then(hits =>\n        this.setState(prevState => ({\n          images: [...prevState.images, ...hits],\n          currentPage: prevState.currentPage + 1,\n        })),\n      )\n\n      .catch(error => this.setState({ error: 'something not good' }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  render() {\n    const { images, isLoading } = this.state;\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.handleSearchQuery} />\n        <ImageGallery images={images} />\n        {isLoading && (\n          <div className=\"Loader\">\n            {' '}\n            <Loader\n              type=\"Bars\"\n              color=\"#3f51b5\"\n              height={60}\n              width={150}\n              timeout={1000} //3 secs\n            />\n          </div>\n        )}\n\n        {!isLoading && images.length > 0 && (\n          <Button onClick={this.getImages}> Load more</Button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}